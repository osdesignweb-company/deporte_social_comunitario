# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2018-12-09 01:07
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_id', models.IntegerField(choices=[(0, 'C\xe9dula de Ciudadan\xeda'), (1, 'C\xe9dula de Extranjer\xeda'), (2, 'Pasaporte')], verbose_name='Tipo de identificaci\xf3n')),
                ('identificacion', models.CharField(max_length=100, unique=True, verbose_name='N\xfamero de identificaci\xf3n')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('primer_apellido', models.CharField(max_length=100, verbose_name='Primer Apellido')),
                ('segundo_apellido', models.CharField(max_length=100, verbose_name='Segundo Apellido')),
                ('genero', models.IntegerField(choices=[(1, 'Femenino'), (2, 'Masculino')], verbose_name='G\xe9nero')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de nacimiento')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='nombre')),
                ('codigo', models.CharField(max_length=10, null=True, verbose_name='c\xf3digo')),
                ('latitud', models.FloatField(null=True)),
                ('longitud', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='nombre')),
                ('codigo', models.CharField(max_length=10, null=True, verbose_name='c\xf3digo')),
                ('latitud', models.FloatField(null=True)),
                ('longitud', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Directorio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, verbose_name='c\xf3digo')),
                ('identificacion', models.CharField(max_length=100, unique=True, verbose_name='N\xfamero de identificaci\xf3n')),
                ('telefono', models.CharField(max_length=25, verbose_name='Tel\xe9fono')),
                ('foto', models.CharField(max_length=100, verbose_name='Foto')),
                ('email', models.CharField(max_length=100, verbose_name='Correo electr\xf3nico')),
                ('direccion', models.CharField(max_length=100, verbose_name='Direcci\xf3n')),
                ('cel', models.FloatField(null=True, verbose_name='Celular')),
                ('Tel_fijo', models.FloatField(verbose_name='Tel\xe9fono fijo')),
                ('Ext', models.FloatField(verbose_name='Extensi\xf3n')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='nombre')),
                ('codigo', models.CharField(max_length=10, null=True, verbose_name='c\xf3digo')),
                ('latitud', models.FloatField(null=True)),
                ('longitud', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='nombre')),
                ('codigo', models.CharField(max_length=10, null=True, verbose_name='c\xf3digo')),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.Ciudad')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.Departamento')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.Municipio')),
            ],
        ),
        migrations.CreateModel(
            name='usuarios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, verbose_name='c\xf3digo')),
                ('tipo_usuario', models.CharField(max_length=100)),
                ('identificacion', models.CharField(max_length=100, unique=True, verbose_name='N\xfamero de identificaci\xf3n')),
                ('passw', models.CharField(max_length=50, verbose_name='Password')),
                ('rol', models.CharField(max_length=20, verbose_name='Rol')),
                ('estado', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='ciudad',
            name='departamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.Departamento'),
        ),
        migrations.AddField(
            model_name='perfilusuario',
            name='lugar_nacimiento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.Pais'),
        ),
        migrations.AddField(
            model_name='perfilusuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
